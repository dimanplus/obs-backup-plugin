name: Push
run-name: ${{ github.ref_name }} push run 🚀
on:
  push:
    branches:
      - master
      - main
      - 'release/**'
    tags:
      - '*'
permissions:
  contents: write
jobs:
  check-format:
    name: Check Formatting 🔍
    if: github.ref_name == 'master' || github.ref_name == 'main'
    uses: ./.github/workflows/check-format.yaml
    permissions:
      contents: read

  build-project:
    name: Build Project 🧱
    uses: ./.github/workflows/build-project.yaml
    secrets: inherit
    permissions:
      contents: read

  create-release:
    name: Create Release 🛫
    if: github.ref_type == 'tag'
    runs-on: ubuntu-24.04
    needs: build-project
    defaults:
      run:
        shell: bash
    steps:
      - name: Check Release Tag ☑️
        id: check
        run: |
          : Check Release Tag ☑️
          if [[ "${RUNNER_DEBUG}" ]]; then set -x; fi
          shopt -s extglob

          case "${GITHUB_REF_NAME}" in
            +([0-9]).+([0-9]).+([0-9]) )
              echo 'validTag=true' >> $GITHUB_OUTPUT
              echo 'prerelease=false' >> $GITHUB_OUTPUT
              echo "version=${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT
              ;;
            +([0-9]).+([0-9]).+([0-9])-@(beta|rc)*([0-9]) )
              echo 'validTag=true' >> $GITHUB_OUTPUT
              echo 'prerelease=true' >> $GITHUB_OUTPUT
              echo "version=${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT
              ;;
            *) echo 'validTag=false' >> $GITHUB_OUTPUT ;;
          esac

      - name: Download Build Artifacts 📥
        uses: actions/download-artifact@v4
        if: fromJSON(steps.check.outputs.validTag)
        with:
          name: ${{ steps.setup.outputs.pluginName }}-${{ steps.setup.outputs.pluginVersion }}-windows-x64-${{ needs.check-event.outputs.commitHash }}   # <-- замените на точное имя артефакта из build-project
          path: ./downloaded-artifacts

      - name: List downloaded files 📝
        if: fromJSON(steps.check.outputs.validTag)
        run: |
          echo "Files in ./downloaded-artifacts:"
          ls -lah ./downloaded-artifacts

      - name: Prepare Files for Release 🏷️
        if: fromJSON(steps.check.outputs.validTag)
        run: |
          # Копируем/перемещаем файлы из скачанной папки в рабочую директорию релиза
          cp ./downloaded-artifacts/* ./

      - name: Generate Checksums 🪪
        if: fromJSON(steps.check.outputs.validTag)
        run: |
          echo "### Checksums" > ${{ github.workspace }}/CHECKSUMS.txt
          for file in ${{ github.workspace }}/@(*.exe|*.deb|*.ddeb|*.pkg|*.tar.xz|*.zip); do
            echo "    ${file##*/}: $(sha256sum "${file}" | cut -d " " -f 1)" >> ${{ github.workspace }}/CHECKSUMS.txt
          done

      - name: Create Release 🛫
        if: fromJSON(steps.check.outputs.validTag)
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          prerelease: ${{ fromJSON(steps.check.outputs.prerelease) }}
          tag_name: ${{ steps.check.outputs.version }}
          name: ${{ needs.build-project.outputs.pluginName }} ${{ steps.check.outputs.version }}
          body_path: ${{ github.workspace }}/CHECKSUMS.txt
          files: |
            ${{ github.workspace }}/*.dll
            ${{ github.workspace }}/*.pdb
            ${{ github.workspace }}/*.exe
            ${{ github.workspace }}/*.zip
            ${{ github.workspace }}/*.pkg
            ${{ github.workspace }}/*.deb
            ${{ github.workspace }}/*.ddeb
            ${{ github.workspace }}/*.tar.xz
